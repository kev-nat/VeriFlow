# Models Configuration
supervisor_model: "gpt-3.5-turbo"
worker_model: "gpt-4o-mini"

# ------------------------------------------------------------------------------------
# Agent Definitions
# Each agent has 'rules' for deterministic anomaly detection and 'scoring' for
# consistent score calculation. The application code will handle this logic.
# The 'prompt' is now simplified to focus only on generating a summary from pre-detected anomalies.
# ------------------------------------------------------------------------------------

agent_1_geolocation:
  features: ['timestamp', 'vehicle_gps_latitude', 'vehicle_gps_longitude', 'eta_variation_hours', 'delivery_time_deviation', 'delay_probability', 'route_risk_level']
  rules:
    - feature: 'delay_probability'
      condition: 'greater_than'
      threshold: 0.7
      reason: "High probability of delay ({value})."
    - feature: 'route_risk_level'
      condition: 'greater_than'
      threshold: 7
      reason: "Severe route risk level detected ({value} on a 0-10 scale)."
    - feature: 'eta_variation_hours'
      condition: 'outside_range'
      threshold: [-2, 5]
      reason: "ETA variation of {value} hours is outside the acceptable range."
  scoring:
    - feature: 'delay_probability'
      type: 'direct' # Value is already a 0-1 risk score
    - feature: 'route_risk_level'
      type: 'normalize'
      range: [0, 10]
    - feature: 'eta_variation_hours'
      type: 'normalize'
      range: [-2, 5]
      # Note: The application logic should handle the absolute deviation for scoring
  prompt: >
    You are a Geolocation & Movement specialist. The following anomalies have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the overall situation based on these issues.
    Respond ONLY with a JSON object with a single key: "summary".

# ---

agent_2_fuel:
  features: ['fuel_consumption_rate', 'weather_condition_severity', 'traffic_congestion_level']
  rules:
    - feature: 'fuel_consumption_rate'
      condition: 'outside_range'
      threshold: [5, 20]
      # This rule has a context dependency handled in the app logic
      reason: "Fuel consumption rate of {value} is abnormal."
  scoring:
    - feature: 'fuel_consumption_rate'
      type: 'normalize'
      range: [5, 20] # Score is based on deviation from this normal range
  prompt: >
    You are a Fuel & Environmental analyst. The following anomalies have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the situation.
    Respond ONLY with a JSON object with a single key: "summary".

# ---

agent_3_logistics:
  features: ['warehouse_inventory_level', 'loading_unloading_time', 'handling_equipment_availability', 'port_congestion_level', 'customs_clearance_time']
  rules:
    - feature: 'warehouse_inventory_level'
      condition: 'less_than'
      threshold: 100
      reason: "Warehouse inventory is critically low at {value} units."
    - feature: 'handling_equipment_availability'
      condition: 'equals'
      threshold: 0
      reason: "No handling equipment is available, causing significant delays."
    - feature: 'port_congestion_level'
      condition: 'greater_than'
      threshold: 8
      reason: "Port congestion level is extremely high ({value})."
  scoring:
    - feature: 'warehouse_inventory_level'
      type: 'inverse_normalize' # Lower is worse
      range: [0, 1000]
    - feature: 'handling_equipment_availability'
      type: 'inverse_normalize' # Lower is worse
      range: [0, 1]
    - feature: 'loading_unloading_time'
      type: 'normalize'
      range: [0.5, 5]
    - feature: 'port_congestion_level'
      type: 'normalize'
      range: [0, 10]
    - feature: 'customs_clearance_time'
      type: 'normalize'
      range: [0.5, 5]
  prompt: >
    You are a Logistics & Operations expert. The following bottlenecks have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the situation.
    Respond ONLY with a JSON object with a single key: "summary".

# ---

agent_4_supplier:
  features: ['order_fulfillment_status', 'shipping_costs', 'supplier_reliability_score', 'lead_time_days', 'historical_demand']
  rules:
    - feature: 'supplier_reliability_score'
      condition: 'less_than'
      threshold: 0.6
      reason: "Supplier reliability score of {value} is below the acceptable threshold."
    - feature: 'lead_time_days'
      condition: 'greater_than'
      threshold: 10
      reason: "Lead time of {value} days is excessive."
    - feature: 'order_fulfillment_status'
      condition: 'equals'
      threshold: 0
      reason: "Order fulfillment has failed."
  scoring:
    - feature: 'supplier_reliability_score'
      type: 'inverse_normalize' # Lower is worse
      range: [0, 1]
    - feature: 'lead_time_days'
      type: 'normalize'
      range: [1, 15]
    - feature: 'order_fulfillment_status'
      type: 'inverse_normalize' # 0 is failure (risk=1), 1 is success (risk=0)
      range: [0, 1]
  prompt: >
    You are an Order & Supplier Analyst. The following issues have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the supplier performance issues.
    Respond ONLY with a JSON object with a single key: "summary".

# ---

agent_5_cargo:
  features: ['iot_temperature', 'cargo_condition_status']
  rules:
    - feature: 'iot_temperature'
      condition: 'outside_range'
      threshold: [-5, 25] # Safe operational range
      reason: "IoT temperature of {value}Â°C is outside the safe range."
    - feature: 'cargo_condition_status'
      condition: 'equals'
      threshold: 0
      reason: "Cargo condition status indicates a problem."
  scoring:
    - feature: 'iot_temperature'
      type: 'normalize'
      range: [-10, 40]
    - feature: 'cargo_condition_status'
      type: 'inverse_normalize'
      range: [0, 1]
  prompt: >
    You are a Cargo & IoT Monitoring specialist. The following cargo integrity risks have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the risks to the cargo.
    Respond ONLY with a JSON object with a single key: "summary".

# ---

agent_6_risk:
  features: ['driver_behavior_score', 'fatigue_monitoring_score', 'disruption_likelihood_score', 'risk_classification']
  rules:
    - feature: 'driver_behavior_score'
      condition: 'less_than'
      threshold: 0.5
      reason: "Driver behavior score is critically low ({value})."
    - feature: 'fatigue_monitoring_score'
      condition: 'less_than'
      threshold: 0.4
      reason: "High driver fatigue detected (score: {value})."
    - feature: 'disruption_likelihood_score'
      condition: 'greater_than'
      threshold: 0.7
      reason: "High likelihood of external disruption ({value})."
    - feature: 'risk_classification'
      condition: 'equals'
      threshold: 'high risk'
      reason: "Shipment is manually classified as 'high risk'."
  scoring:
    - feature: 'driver_behavior_score'
      type: 'inverse_normalize'
      range: [0, 1]
    - feature: 'fatigue_monitoring_score'
      type: 'inverse_normalize'
      range: [0, 1]
    - feature: 'disruption_likelihood_score'
      type: 'direct'
    - feature: 'risk_classification'
      type: 'categorical'
      mapping: {'low risk': 0.1, 'moderate risk': 0.5, 'high risk': 0.9}
  prompt: >
    You are a Human Factors & Risk Analyst. The following risks have been programmatically detected: {reasons_list}.
    Provide a single, concise summary sentence explaining the overall operational risk.
    Respond ONLY with a JSON object with a single key: "summary".

# ------------------------------------------------------------------------------------
# Supervisor Definition
# ------------------------------------------------------------------------------------

supervisor:
  # The prompt now includes the global score for better context.
  prompt: >
    You are an expert supply chain risk supervisor. You have received analyses from your team of specialist agents.
    The overall operational risk level has been assessed as **{risk_level}** with a calculated global score of **{global_score:.2f}**.
    Agent Reports:
    {report_summary}
    Your task is to synthesize these findings and provide a final list of concise, actionable recommendations for a human operator.
    Prefix critical, immediate actions with 'IMMEDIATE:'. Do not be conversational.

  # These thresholds are now centrally located for easy tuning of the system's risk tolerance.
  risk_thresholds:
    HIGH: 0.7
    MODERATE: 0.4
    # Anything below 'MODERATE' is considered LOW.
  
  # Weights for each agent's score to calculate the final global score.
  # This allows prioritizing certain risk types (e.g., human factors might be more critical).
  agent_weights:
    agent_1_geolocation: 0.20
    agent_2_fuel: 0.10
    agent_3_logistics: 0.15
    agent_4_supplier: 0.15
    agent_5_cargo: 0.15
    agent_6_risk: 0.25